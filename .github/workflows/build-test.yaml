name: Build and Test

on:
  # Runs on pushes to pull requests
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  lint:
    name: ${{ matrix.directory }} Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [ "task-service", "leases" ] # Add more directories here
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
      - name: Install dependencies
        run: |
          cd ${{ matrix.directory }}
          npm install
      - name: Run linter
        run: |
          cd ${{ matrix.directory }}
          npm run lint -- --no-cache # This is a workaround for https://github.com/eslint/eslint/issues/19322

  build:
    name: ${{ matrix.directory }} Build
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        directory: [ "task-service", "leases" ] # Add more directories here
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
      - name: Cache Next.js
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: |
          cd ${{ matrix.directory }}
          npm install
      - name: Build
        run: |
          cd ${{ matrix.directory }}
          npm run build

  test:
    name: ${{ matrix.directory }} Test
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        directory: [ "task-service", "leases" ] # Add more directories here
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
      - name: Cache Next.js
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: |
          cd ${{ matrix.directory }}
          npm install
      - name: Run tests
        run: |
          cd ${{ matrix.directory }}
          npm test
